Q: When would you want to create a remote repository rather than keeping all your work local?

A: When you are working with others on a shared repository. Or when you think you will be working on a repo from more than one computer. Or maybe just because you don't trust your own backup regime.

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

A: Because it forces you to write commit messages and think about what you're comitting when and why.

Q: Describe the differences between forks, clones, and branches. When would you use one instead of another?

A: A clone is a copy of a repo. A fork is kind of like a special kind of clone. It allows you to make a copy of a repo that you don't have write permissions to. You can then clone this fork and push changes to the clone of the fork. ...kinda... A clone of a repo and the repo it clones should stay in sync. A branch is when you go off and do some work on a repo but you do not push your changes to the repo you worked on. I think.

Q: What is the benefit of having a copy of the last known state of the remote stored locally?

A: It makes this less complicated if someone else is also working on the same remote repo with a local copy somewhere else. 

Q: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

A: It keeps master shippable and doesn't interfere with others who might be working on master. 